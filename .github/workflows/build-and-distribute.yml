name: Build and Distribute Tokens

on:
  push:
    branches: [ main ]
    paths:
      - 'tokens/**'       # Run if any token file changes
      - 'build.js'        # Run if the main build script changes
      - 'config.js'       # Run if the configuration changes
      - 'src/**'          # Run if any custom formatters/actions change
      - '.github/workflows/build-and-distribute.yml' # It's good practice to run the workflow if it itself changes

jobs:
  build-and-distribute:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        target-repo: 
          - kunalkatre21/web-app
          - kunalkatre21/android-app
          - kunalkatre21/ios-app
          # Add more repositories as needed
    
    steps:
    - name: Checkout Style Dictionary repo
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build tokens
      run: npm run build
    
    - name: Process repository ${{ matrix.target-repo }}
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        TARGET_REPO: ${{ matrix.target-repo }}
      run: |
        # This 'set -ex' is important: it makes the script exit on any error and prints each command before running it.
        set -ex

        echo "üöÄ Processing repository: $TARGET_REPO"

        # --- STEP 1: LOUDLY ANNOUNCE WHAT WAS BUILT ---
        echo "--- Listing Build Artifacts ---"
        # The 'ls -R' command lists all files and directories recursively from the build folder.
        # If this is empty, we know the build step is not producing files.
        ls -R ../build
        echo "-------------------------------"

        # Clone the target repository
        gh repo clone $TARGET_REPO temp-repo
        cd temp-repo

        # Create a new branch
        BRANCH_NAME="tokens/update-$(date +%Y%m%d-%H%M%S)"
        git checkout -b $BRANCH_NAME

        # --- STEP 2: ROBUST FILE COPYING ---
        # The '-v' flag makes 'cp' verbose. We have removed the silent error handling.
        if [[ "$TARGET_REPO" == "kunalkatre21/web-app" ]]; then
          echo "Copying web tokens..."
          mkdir -p src/styles/tokens
          # The -r flag is needed to copy directories if they exist.
          cp -vr ../build/css/* src/styles/tokens/

        elif [[ "$TARGET_REPO" == "kunalkatre21/android-app" ]]; then
          echo "Copying Android & Compose tokens..."
          # This path comes from your repositories.json file
          mkdir -p assets/design-tokens
          cp -vr ../build/compose/* assets/design-tokens/
          cp -vr ../build/android/* assets/design-tokens/

        elif [[ "$TARGET_REPO" == "kunalkatre21/ios-app" ]]; then
          echo "Copying iOS tokens..."
          # This path comes from your repositories.json file
          mkdir -p assets/design-tokens
          cp -vr ../build/ios-swift/* assets/design-tokens/
          cp -vr ../build/ios-colorsets/* assets/design-tokens/
        fi

        # --- STEP 3: LOUDLY ANNOUNCE THE RESULT ---
        echo "--- Git Status After Copy ---"
        # 'git status' will tell us if git sees new or modified files.
        git status
        echo "-----------------------------"

        # Check for changes. This part of your script is already perfect.
        if git diff --quiet && git diff --cached --quiet; then
          echo "‚ÑπÔ∏è No changes were detected by git. The script will now stop for this repository."
        else
          echo "üìù Changes detected, creating PR..."
          git add .
          git commit -m "feat: update design tokens

          Auto-generated token update from Style Dictionary"
          git push origin $BRANCH_NAME
          gh pr create \
            --title "üé® Update Design Tokens" \
            --body "Automated design token update from the MyStyleD repository." \
            --base main \
            --head $BRANCH_NAME
          echo "‚úÖ PR created successfully for $TARGET_REPO"
        fi

        cd ..
        rm -rf temp-repo